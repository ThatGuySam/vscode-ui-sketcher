{
  "name": "ui-sketcher",
  "displayName": "UI Sketcher",
  "description": "Turn rough UI sketches into code with the magic of GPT-4 Vision",
  "publisher": "pAIrprog",
  "repository": {
    "type": "git",
    "url": "https://github.com/pAIrprogio/vscode-ui-sketcher"
  },
  "license": "MIT",
  "version": "1.0.5",
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ui-sketcher.open",
        "title": "UI Sketcher: Open drawing board"
      },
      {
        "command": "ui-sketcher.set-openai-token",
        "title": "UI Sketcher: Set OpenAI API Token"
      }
    ],
    "configuration": {
      "title": "UI Sketcher Configuration",
      "properties": {
        "ui-sketcher.stack": {
          "type": "string",
          "description": "List of packages used in the project which should be taken into account when generating code"
        },
        "ui-sketcher.customInstructions": {
          "type": "string",
          "description": "Custom instructions to include when generating code"
        },
        "ui-sketcher.maxTokens": {
          "type": "number",
          "default": 1000,
          "description": "Maximum number of tokens to generate"
        },
        "ui-sketcher.previewUrl": {
          "type": "string",
          "description": "Please read the doc: https://github.com/pAIrprogio/vscode-ui-sketcher/blob/main/doc/setup-preview-url.md\n\nA url which should be able to take a relative file's path as a query param and display the file's component as a result. For example http://localhost/test-ui should work with  http://localhost/test-ui?path=path/to/file.tsx"
        },
        "ui-sketcher.partialRenderEnabled": {
          "type": "boolean",
          "default": false,
          "description": "If enabled, when clicking on \"Make Real\" the extension will only generate code for the active selection.\n\nIf there isn't an active selection, the whole canvas will be used."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "vscode:package": "vsce package --no-dependencies",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/ejs": "^3.1.5",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.84.0",
    "@typescript-eslint/eslint-plugin": "^5.53.0",
    "@typescript-eslint/parser": "^5.53.0",
    "@vscode/test-electron": "^2.2.3",
    "eslint": "^8.34.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "raw-loader": "^4.0.2",
    "ts-loader": "^9.4.2",
    "typescript": "^4.9.5",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.1"
  },
  "dependencies": {
    "ejs": "^3.1.9",
    "openai": "^4.16.1"
  }
}
